
## Collecting data needed for the summary page

#set($nrOfPages = $document.getRootElement().getChildren("results").size())

## Get the total objects
    
#set($nrOfDecimals = 0)

## Creating all statistics objects
#set($statsJs = $stats.newInstance("js","Number of JS","","",1))
#set($statsCss = $stats.newInstance("css","Number of CSS","","",1))
#set($statsImages = $stats.newInstance("images","Number of images","","",1))
#set($statsCssImages = $stats.newInstance("cssimages","Number of CSS images","","",1))
#set($statsRequests = $stats.newInstance("requests","Number of requests","","",1))
#set($statsPageWeight = $stats.newInstance("pageweight","Total page weight","weight","kb",1))
#set($statsImageWeight = $stats.newInstance("imageweight","Image weight","weight","kb",1))
#set($statsJsWeight = $stats.newInstance("jsweight","JS weight","weight","kb",1))
#set($statsCssWeight = $stats.newInstance("cssweight","CSS weight","weight","kb",1))
#set($statsTotalImageWeight = $stats.newInstance("totalimageweight","Image weight per page","weight","kb",1))
#set($statsTotalCssWeight = $stats.newInstance("totalcssweight","CSS weight per page","weight","kb",1))
#set($statsTotalJsWeight = $stats.newInstance("totaljsweight","JS weight per page","weight","kb",1))
#set($statsScore = $stats.newInstance("score","Score","","",1))
#set($statsDocumentWeight = $stats.newInstance("documentweight","Document page weight","weight","kb",1))
#set($statsSpof = $stats.newInstance("spof","Number of SPOF per page","","",1))
#set($statsSpofPages = $stats.newInstance("spofpages","Pages with SPOF","","",1))
#set($statsJsSyncInHead = $stats.newInstance("jssyncinhead","Number of JS synchronously in head","","",1))
#set($statsAssetsWithoutExpires = $stats.newInstance("assetswithoutexpires","Requests without expires","","",1))
#set($statsCriticalPath = $stats.newInstance("criticalpath","Critical Rendering Path Score","","",1))
#set($statsTextContent = $stats.newInstance("textcontent","Amount of text content","","%",1))
#set($statsTTFB = $stats.newInstance("ttfb","Time to first byte","time","s",3))
#set($statsBackend = $stats.newInstance("backend","Time spent in backend","time","%",1))
#set($statsFrontend = $stats.newInstance("frontend","Time spent in frontend","time","%",1))
#set($statsTimeSinceLastModificationInSeconds = $stats.newInstance("timesincelastmodificationinseconds","Time since last modification","cachetime","s",1))
#set($statsAssetCacheTimeInSeconds = $stats.newInstance("assetcachetimeinseconds","Cache time","cachetime","s",1))
#set($statsDomElements = $stats.newInstance("domelements","Number of DOM elements","","",1))

#set($hide = $allStats.add($statsScore))
#set($hide = $allStats.add($statsCriticalPath))
#set($hide = $allStats.add($statsJsSyncInHead))
#set($hide = $allStats.add($statsJs))
#set($hide = $allStats.add($statsCss))
#set($hide = $allStats.add($statsImages))
#set($hide = $allStats.add($statsCssImages))
#set($hide = $allStats.add($statsRequests))
#set($hide = $allStats.add($statsImageWeight))
#set($hide = $allStats.add($statsJsWeight))
#set($hide = $allStats.add($statsCssWeight))
#set($hide = $allStats.add($statsTotalImageWeight))
#set($hide = $allStats.add($statsTotalCssWeight))
#set($hide = $allStats.add($statsTotalJsWeight))
#set($hide = $allStats.add($statsPageWeight))
#set($hide = $allStats.add($statsDocumentWeight))
#set($hide = $allStats.add($statsDomElements))
#set($hide = $allStats.add($statsSpof))
#set($hide = $allStats.add($statsSpofPages))
#set($hide = $allStats.add($statsAssetsWithoutExpires))
#set($hide = $allStats.add($statsTextContent))
#set($hide = $allStats.add($statsTTFB))
#set($hide = $allStats.add($statsBackend))
#set($hide = $allStats.add($statsFrontend))
#set($hide = $allStats.add($statsTimeSinceLastModificationInSeconds))
#set($hide = $allStats.add($statsAssetCacheTimeInSeconds))


#foreach ($results in $document.getRootElement().getChildren())

    #if($!{results.getChild("stats").getChild("js").getChild("r")})
        $statsJs.addValue($math.toInteger($results.getChild("stats").getChild("js").getChild("r").getValue()))
    #end   
      
    #if($!{results.getChild("stats").getChild("css").getChild("r")})
        $statsCss.addValue($math.toInteger($results.getChild("stats").getChild("css").getChild("r").getValue()))
    #end

    #if($!{results.getChild("stats").getChild("cssimage").getChild("r")})
        $statsCssImages.addValue($math.toInteger($results.getChild("stats").getChild("cssimage").getChild("r").getValue()))
    #end

    #if($!{results.getChild("stats").getChild("image").getChild("r")})
        $statsImages.addValue($math.toInteger($results.getChild("stats").getChild("image").getChild("r").getValue()))
    #end

    #if($!{results.getChild("r")})
         $statsRequests.addValue($math.toInteger($results.getChild("r").getValue()))
    #end
      
    #if($!{results.getChild("w")})
        ## sometimes the page weight is wrongly calculated by YSlow, so lets do it manually
        #set($totalWeight = 0)
        #foreach ($asset in $results.getChild("comps").getChildren())
            #set($totalWeight = $math.add($totalWeight,$asset.getChild("size").getValue()))
        #end
        #set($totalWeight = $math.roundTo(1,$math.div($totalWeight,1000)))
        $statsPageWeight.addValue($totalWeight)
    #end

    #if($!{results.getChild("o")})
        $statsScore.addValue($math.toInteger($results.getChild("o").getValue()))
    #end

    #if($!{results.getChild("stats").getChild("doc").getChild("w")})
   
        $statsDocumentWeight.addValue($math.toDouble($math.roundTo(3,$math.div($results.getAttribute("size").getValue(),1000))))
    #end


    #if($!{results.getChild("g").getChild("mindom").getChild("score")})
           $statsDomElements.addValue($math.toInteger($results.getChild("g").getChild("mindom").getChild("components").getChildText("item")))
    #end

    #if($!{results.getChild("g").getChild("spof").getChild("score")})
	   #if ($results.getChild("g").getChild("spof").getChild("score").getValue() != 100)
	       $statsSpofPages.addValue(1)
           $statsSpof.addValue($math.toInteger($results.getChild("g").getChild("spof").getChild("components").getChildren("item").size()))
       #else
        $statsSpof.addValue(0)    
       #end       
    #end


    #if($!{results.getChild("g").getChild("criticalpath").getChild("score")})
           $statsCriticalPath.addValue($math.toInteger($results.getChild("g").getChild("criticalpath").getChild("score").getValue()))
    #end

    #if($!{results.getChild("g").getChild("textcontent").getChild("score")})
           $statsTextContent.addValue($math.toDouble($results.getChild("g").getChild("textcontent").getChild("components").getChildText("item")))
    #end

    #if($!{results.getChild("g").getChild("syncjsinhead").getChild("components")})
     $statsJsSyncInHead.addValue($math.toInteger($results.getChild("g").getChild("syncjsinhead").getChild("components").getChildren("item").size()))
    #end


    #if($!{results.getChild("g").getChild("expiresmod").getChild("components")})
     $statsAssetsWithoutExpires.addValue($math.toInteger($results.getChild("g").getChild("expiresmod").getChild("components").getChildren("item").size()))
    #end

    #if($!{results.getAttribute("ttfb")})
	$statsTTFB.addValue($math.toDouble($results.getAttribute("ttfb").getValue()))
	
	## It can happen that the frontend value is smaller that the ttfb, that is a defect, then skip adding the result
	#if ($math.div($math.toDouble($results.getChild("lt").getValue()),1000) > ($math.toDouble($results.getAttribute("ttfb").getValue())))	
	$statsBackend.addValue($math.roundTo(3,$math.mul($math.div($math.toDouble($results.getAttribute("ttfb").getValue()),$math.div($math.toDouble($results.getChild("lt").getValue()),1000)),100)))
	$statsFrontend.addValue($math.roundTo(3,$math.mul($math.div($math.sub($math.div($math.toDouble($results.getChild("lt").getValue()),1000),$math.toDouble($results.getAttribute("ttfb").getValue())),$math.div($math.toDouble($results.getChild("lt").getValue()),1000)),100)))
	#end 
    #end

    #set ($totalImagePageSize = 0)
    #set ($totalCssPageSize = 0)
    #set ($totalJsPageSize = 0)

	## also fetch the modified since & cache time
	#foreach ($asset in $results.getChild("comps").getChildren())

		## set default values
		#set ($lastMod = "")
		#set ($date = "")
		#set ($cacheControl = 0)
		#set ($expires = "")
		
		## fetch the real ones
		#set ($lastMod = $asset.getChild("headers").getChild("response").getChild("Last-Modified").getValue())
		#set ($date = $asset.getChild("headers").getChild("response").getChild("Date").getValue())
		#set ($cacheControl = $asset.getChild("headers").getChild("response").getChild("Cache-Control").getValue())
		#set ($expires = $asset.getChild("headers").getChild("response").getChild("Expires").getValue())
					
		#set ($delta = $header.getDelta($lastMod,$date))
		#if ($delta=="" || ! $delta)
			## unknown skip it for now
		#else
		    $statsTimeSinceLastModificationInSeconds.addValue($delta.getSeconds())
		#end	
		
		#set ($cacheTime = $header.getCacheTime($cacheControl, $expires, $date))
		#if ($cacheTime=="" || !$cacheTime)
		     	$statsAssetCacheTimeInSeconds.addValue(0)
		#else	
		     	$statsAssetCacheTimeInSeconds.addValue($cacheTime.getSeconds())
		#end

        #if (($asset.getChild("type").getValue() == "image") || ($asset.getChild("type").getValue() == "cssimage"))
           $statsImageWeight.addValue($math.toDouble($math.roundTo(3,$math.div($asset.getChild("size").getValue(),1000))))
           #set($totalImagePageSize = $math.add($totalImagePageSize,$math.toDouble($math.roundTo(3,$math.div($asset.getChild("size").getValue(),1000)))))
        #elseif ($asset.getChild("type").getValue() == "css") 
           $statsCssWeight.addValue($math.toDouble($math.roundTo(3,$math.div($asset.getChild("size").getValue(),1000))))
           #set($totalCssPageSize = $math.add($totalCssPageSize,$math.toDouble($math.roundTo(3,$math.div($asset.getChild("size").getValue(),1000)))))
        #elseif ($asset.getChild("type").getValue() == "js")   
             $statsJsWeight.addValue($math.toDouble($math.roundTo(3,$math.div($asset.getChild("size").getValue(),1000))))
             #set($totalJsPageSize = $math.add($totalJsPageSize,$math.toDouble($math.roundTo(3,$math.div($asset.getChild("size").getValue(),1000)))))
        #end
		
	#end

    #if($totalImagePageSize>0)
        $statsTotalImageWeight.addValue($totalImagePageSize)
    #end
    #if($totalCssPageSize>0)
        $statsTotalCssWeight.addValue($totalCssPageSize)
    #end
    #if($totalJsPageSize>0)
        $statsTotalJsWeight.addValue($totalJsPageSize)
    #end
	
#end




							